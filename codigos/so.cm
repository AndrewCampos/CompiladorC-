int current;
int processA;
int processB;
int dataA;
int dataB;
int dataSO;
int stackA;
int stackB;
int mode;
int finish;

int endProcess(void) {
    int stack;

    if (finish == 1) {
        halt();
    }

    finish = 1;
    updateLP(dataSO);
    stack = 0;
    while(stack < 10) {
        if (current == 0) {
            saveStack(stackA + stack);
        } else {
            saveStack(stackB + stack);
        }
        stack = stack + 1;
    }

    if (current == 0) {
        current = 1;
    } else {
        current = 0;
    }

    while(stack > 0) {
        if (current == 0) {
            loadStack(load(stackA + stack -1));
        } else {
            loadStack(load(stackB + stack -1));
        }
        stack = stack - 1;
    }

    if (current == 0) {
        updateLP(dataA);
    } else {
        updateLP(dataB);
    }

    return 0;
}

int switch(void) {
    int stack;

    if (finish == 1) {
        return 0;
    }

    if (mode == 0) {
        return 0;
    }

    updateLP(dataSO);
    stack = 0;
    while(stack < 10) {
        if (current == 0) {
            saveStack(stackA + stack);
        } else {
            saveStack(stackB + stack);
        }
        stack = stack + 1;
    }

    if (current == 0) {
        current = 1;
    } else {
        current = 0;
    }

    while(stack > 0) {
        if (current == 0) {
            loadStack(load(stackA + stack-1));
        } else {
            loadStack(load(stackB + stack-1));
        }
        stack = stack - 1;
    }
    
    if (current == 0) {
        updateLP(dataA);
    } else {
        updateLP(dataB);
    }

    return 0;
}

void main(void) {
    processA = 345;
    dataA = 415;
    stackA = 455;
    processB = 465;
    dataB = 535;
    stackB = 575;
    dataSO = 341;
    store(stackA, processA);
    store(stackB, processB);
    current = 0;
    finish = 0;
    mode = input();
    loadStack(processA);
    updateLP(dataA);
}