addi $lp $zero 461;
jmp 27;
//gcd
str $p1 $lp 1;
str $p2 $lp 2;
ldr $r1 $lp 2;
put $r2 0;
bne $r1 $r2 11;
ldr $r4 $lp 1;
mov $ret $r4 0;
jst;
jmp 26;
//L0
ldr $r5 $lp 2;
mov $p1 $r5 0;
ldr $r6 $lp 1;
ldr $r7 $lp 1;
ldr $r8 $lp 2;
div $r9 $r7 $r8;
ldr $r10 $lp 2;
mult $r11 $r9 $r10;
sub $r12 $r6 $r11;
mov $p2 $r12 0;
addi $lp $lp 2;
jal 2;
subi $lp $lp 2;
mov $ret $ret 0;
jst;
//L1
jst;
//main
ldr $r13 $lp 1;
in $ret;
mov $r13 $ret 0;
str $r13 $lp 1;
ctso;
ldr $r14 $lp 2;
in $ret;
mov $r14 $ret 0;
str $r14 $lp 2;
ldr $r15 $lp 1;
mov $p1 $r15 0;
ldr $r16 $lp 2;
mov $p2 $r16 0;
addi $lp $lp 2;
jal 2;
subi $lp $lp 2;
mov $p1 $ret 0;
out $p1;
jmp 46;
//end
hlt;
